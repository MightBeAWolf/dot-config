theme = "dracula"



[editor]
# Desc: Number of lines of padding around the edge of the screen when scrolling
# Default: 5
# scrolloff = 
  
# Desc: Enable mouse mode
# Default: true
# mouse = 
  
# Desc: Middle click paste support
# Default: true
# middle-click-paste = 
  
# Desc: Number of lines to scroll per scroll wheel step
# Default: 3
# scroll-lines = 
  
# Desc: Shell to use when running external commands
# Default: Unix: ["sh", "-c"]
# shell = 
  
# Desc: Line number display: absolute simply shows each line's number, while
# relative shows the distance from the current line. When unfocused or in insert
# mode, relative will still show absolute line numbers
# Default: absolute
# line-number = "relative"
  
# Desc: Highlight all lines with a cursor
# Default: false
cursorline = true
  
# Desc: Highlight all columns with a cursor
# Default: false
# cursorcolumn = true
  
# Desc: Gutters to display: Available are diagnostics and diff and line-numbers
# and spacer, note that diagnostics also includes other features like
# breakpoints, 1-width padding will be inserted if gutters is non-empty
# Default: ["diagnostics", "spacer", "line-numbers", "spacer", "diff"]
# gutters = 
  
# Desc: Enable automatic pop up of auto-completion
# Default: true
# auto-completion = 
  
# Desc: Enable automatic formatting on save
# Default: true
# auto-format = 
  
# Desc: Enable automatic saving on the focus moving away from Helix. Requires
# focus event support from your terminal
# Default: false
auto-save = false
  
# Desc: Time in milliseconds since last keypress before idle timers trigger.
# Used for autocompletion, set to 0 for instant
# Default: 400
# idle-timeout = 
  
# Desc: Whether to apply completion item instantly when selected
# Default: true
# preview-completion-insert = 
  
# Desc: The min-length of word under cursor to trigger autocompletion
# Default: 2
# completion-trigger-len = 
  
# Desc: Set to true to make completions always replace the entire word and not
# just the part before the cursor
# Default: false
# completion-replace = 
  
# Desc: Whether to display info boxes
# Default: true
# auto-info = 
  
# Desc: Set to true to override automatic detection of terminal truecolor
# support in the event of a false negative
# Default: false
# true-color = 
  
# Desc: Set to true to override automatic detection of terminal undercurl
# support in the event of a false negative
# Default: false
# undercurl = 
  
# Desc: List of column positions at which to display the rulers. Can be
# overridden by language specific rulers in languages.toml file
# Default: []
rulers = [80]
  
# Desc: Renders a line at the top of the editor displaying open buffers. Can be
# always, never or multiple (only shown if more than one buffer is in use)
# Default: never
bufferline = "multiple"
  
# Desc: Whether to color the mode indicator with different colors depending on
# the mode itself
# Default: false
color-modes = true
  
# Desc: Maximum line length. Used for the :reflow command and soft-wrapping if
# soft-wrap.wrap-at-text-width is set
# Default: 80
# text-width = 
  
# Desc: Directories relative to the workspace root that are treated as LSP
# roots. Should only be set in .helix/config.toml
# Default: []
# workspace-lsp-roots = 
  
# Desc: The line ending to use for new documents. Can be native, lf, crlf, ff,
# cr or nel. native uses the platform's native line ending (crlf on Windows,
# otherwise lf).
# Default: native
# default-line-ending = 
  
# Desc: Whether to automatically insert a trailing line-ending on write if
# missing
# Default: true
# insert-final-newline = 

# Desc: Enables automatic insertion of pairs to parentheses, brackets, etc.
# Default: true
# auto-pairs = 



[editor.statusline]
# The following statusline elements can be used:
# - mode                        The current editor mode (mode.normal/
#                               mode.insert/mode.select)
# - spinner                     A progress spinner indicating LSP activity
# - file-name                   The path/name of the opened file
# - file-base-name              The basename of the opened file
# - file-modification-indicator The indicator to show whether the file is
#                               modified (a [+] appears when there are unsaved
#                               changes)
# - file-encoding               The encoding of the opened file if it differs
#                               from UTF-8
# - file-line-ending            The file line endings (CRLF or LF)
# - read-only-indicator         An indicator that shows [readonly] when a file
#                               cannot be written
# - total-line-numbers          The total line numbers of the opened file
# - file-type                   The type of the opened file
# - diagnostics                 The number of warnings and/or errors
# - workspace-diagnostics       The number of warnings and/or errors on
#                               workspace
# - selections                  The number of active selections
# - primary-selection-length    The number of characters currently in primary
#                               selection
# - position                    The cursor position
# - position-percentage         The cursor position as a percentage of the total
#                               number of lines
# - separator                   The string defined in
#                               editor.statusline.separator (defaults to "│")
# - spacer                      Inserts a space between elements (multiple/
#                               contiguous spacers may be specified)
# - version-control             The current branch name or detached commit hash
#                               of the opened workspace
# - register                    The current selected register

# A list of elements aligned to the left of the statusline
# Default: ["mode", "spinner", "file-name", "read-only-indicator",
#"file-modification-indicator"]
left = ["mode", "spinner"]

# A list of elements aligned to the middle of the statusline
# Default: []
center = ["file-name", "read-only-indicator", "file-modification-indicator"]

# A list of elements aligned to the right of the statusline
# Default: 
right = ["version-control", "diagnostics", "selections", "register",
         "position", "file-encoding"]

# The character used to separate elements in the statusline
# Default: "│"
# separator = 

# The text shown in the mode element for normal mode
# Default: "NOR"
# mode.normal = 

# The text shown in the mode element for insert mode
# Default: "INS"
# mode.insert = 

# The text shown in the mode element for select mode
# Default: "SEL"
# mode.select = 



[editor.lsp]
# Enables LSP integration. Setting to false will completely disable language
# servers regardless of language settings.
# Default: true
# enable = 

# Display LSP progress messages below statusline1
# Default: false
display-messages = true

# Enable automatic popup of signature help (parameter hints)
# Default: true
# auto-signature-help = 

# Display inlay hints
# Default: false
display-inlay-hints = true

# Display docs under signature help popup
# Default: true
# display-signature-help-docs = 

# Enables snippet completions. Requires a server restart (:lsp-restart) to take
# effect after :config-reload/:set.
# Default: true
# snippets = 

# Include declaration in the goto references popup.
# Default: true
# goto-reference-include-declaration = 



[editor.cursor-shape]
# Cursor shape options:
# - block
# - bar
# - underline
# - hidden

# Cursor shape in insert mode
# Default: "block"
insert = "bar"
# Cursor shape in normal mode
# Default: "block"
# normal = 
# Cursor shape in select mode
# Default: "block"
# select = 



[editor.file-picker]
# Enables ignoring hidden files
# Default: true
# hidden = 

# Follow symlinks instead of ignoring them
# Default: true
# follow-symlinks = 

# Ignore symlinks that point at files already shown in the picker
# Default: true
# deduplicate-links = 

# Enables reading ignore files from parent directories
# Default: true
# parents = 

# Enables reading .ignore files
# Default: true
# ignore = 

# Enables reading .gitignore files
# Default: true
# git-ignore = 

# Enables reading global .gitignore, whose path is specified in git's config:
# core.excludefile option
# Default: true
# git-global = 

# Enables reading .git/info/exclude files
# Default: true
# git-exclude = 

# Set with an integer value for maximum depth to recurse
# Default: Defaults to None.
# max-depth = 



[editor.auto-pairs]
'(' = ')'
'{' = '}'
'[' = ']'
'"' = '"'
'`' = '`'
'<' = '>'



[editor.search]
# Enable smart case regex searching (case-insensitive unless pattern contains
# upper case characters)
# Default: true
# smart-case = 

# Whether the search should wrap after depleting the matches
# Default: true
# wrap-around = 



[editor.whitespace]
render = "all"
# or control each character
# [editor.whitespace.render]
# space = "all"
# tab = "all"
# newline = "none"



[editor.whitespace.characters]
space = "·"
nbsp = "⍽"
tab = "→"
newline = "⏎"
tabpad = "·" # Tabs will look like "→···" (depending on tab width)



[editor.indent-guides]
# Whether to render indent guides
# Default: false
render = true

# Literal character to use for rendering the indent guide
# Some characters that work well: "▏", "┆", "┊", "⸽"
# Default: │
# character = 

# Number of indent levels to skip
# Default: 0
# skip-levels = 



[editor.soft-wrap]
# Options for soft wrapping lines that exceed the view width:

# Whether soft wrapping is enabled.
# Default: false
# enable = 

# Maximum free space left at the end of the line.
# Default: 20
# max-wrap = 

# Maximum indentation to carry over when soft wrapping a line.
# Default: 40
# max-indent-retain = 

# Text inserted before soft wrapped lines, highlighted with ui.virtual.wrap
# Default: ↪
# wrap-indicator = 

# Soft wrap at text-width instead of using the full viewport size.
# Default: false
# wrap-at-text-width = 



[editor.smart-tab]
# If set to true, then when the cursor is in a position with non-whitespace to
# its left, instead of inserting a tab, it will run move_parent_node_end. If
# there is only whitespace to the left, then it inserts a tab as normal. With
# the default bindings, to explicitly insert a tab character, press Shift-tab.
# Default: true
# enable = 

# Normally, when a menu is on screen, such as when auto complete is triggered,
# the tab key is bound to cycling through the items. This means when menus are
# on screen, one cannot use the tab key to trigger the smart-tab command. If
# this option is set to true, the smart-tab command always takes precedence,
# which means one cannot use the tab key to cycle through menu items. One of the
# other bindings must be used instead, such as arrow keys or C-n/C-p.
# Default: false
# supersede-menu = 


[keys.normal]
"C-right" = "move_next_word_end"
"C-left" = "move_prev_word_start"
"C-d" = ["search_selection", "extend_search_next"]
"C-u" = "remove_primary_selection"
"esc" = "keep_primary_selection"

"A-l" = "extend_parent_node_end"
"A-h" = "extend_parent_node_start"

# Goto line end/start
"L" = "extend_to_line_end"
"C-l" = "split_selection_on_newline"
"H" = "extend_to_first_nonwhitespace"
"C-h" = ["split_selection_on_newline", "goto_first_nonwhitespace"]

# Move Buffers
"," = "goto_previous_buffer"
"." = "goto_next_buffer"

# Line Selection
"X" = ["extend_line_up", "extend_to_line_bounds"]


[keys.insert]
"C-right" = "move_next_word_end"
"C-left" = "move_prev_word_start"
"A-h" = "move_char_left"
"A-j" = "move_line_down"
"A-k" = "move_line_up"
"A-l" = "move_char_right"
"esc" = "normal_mode"

